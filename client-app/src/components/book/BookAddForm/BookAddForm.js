import React, {useState, useEffect} from 'react';
import axios from 'axios';
import {useNavigate, useParams} from "react-router-dom";
import styles from "./BookAddForm.module.scss";
import Select from "react-select";

const BookAddForm = () => {
    const [book, setBook] = useState({
        name: '',
        summary: '',
        price: '',
        qualityDescription: '',
        authorId: null,
    });
    const [authors, setAuthors] = useState([]);
    const [selectedAuthor, setSelectedAuthor] = useState(null);
    const [loading, setLoading] = useState(true);
    const navigate = useNavigate();

    useEffect(() => {
        axios.get(`http://localhost:5103/api/authors`)
            .then(response => {
                const authorsData = response.data.map(author => ({
                    value: author.id,
                    label: author.fullname,
                }));
                setAuthors(authorsData);
                setLoading(false);
            })
            .catch(error => {
                console.error(error);
            });
    }, []);

    const handleInputChange = (event) => {
        const {name, value} = event.target;
        setBook({...book, [name]: value});
    };

    const handleAuthorChange = (selectedOption) => {
        setSelectedAuthor(selectedOption);
        setBook({...book, authorId: selectedOption?.value});
    };

    const handleSubmit = (event) => {
        event.preventDefault();
        const createBookRequest = {
            Id: 0, // Assuming the Id will be generated by the backend
            Name: book.name,
            Summary: book.summary,
            Price: parseFloat(book.price),
            QualityDescription: book.qualityDescription,
            AuthorId: book.authorId,
        };

        axios.post(`http://localhost:5103/api/books`, createBookRequest)
            .then(response => {
                console.log("Book created successfully!");
                navigate('/books'); // Redirect to book list or details page
            })
            .catch(error => {
                console.error(error);
            });
    };

    return (
        <div className={styles.CreateBook}>
            {loading ? (
                <p>Loading...</p>
            ) : (
                <form onSubmit={handleSubmit}>
                    <label>
                        Name:
                        <input type="text" name="name" value={book.name} onChange={handleInputChange} required/>
                    </label>
                    <br/>
                    <label>
                        Summary:
                        <textarea name="summary" value={book.summary} onChange={handleInputChange} required/>
                    </label>
                    <br/>
                    <label>
                        Price:
                        <input type="number" name="price" value={book.price} onChange={handleInputChange} required/>
                    </label>
                    <br/>
                    <label>
                        Author:
                        <Select
                            value={selectedAuthor}
                            onChange={handleAuthorChange}
                            options={authors}
                            placeholder="Select Author"
                            required
                        />
                    </label>
                    <br/>
                    <label>
                        Quality:
                        <input type="text" name="qualityDescription" value={book.qualityDescription}
                               onChange={handleInputChange} required/>
                    </label>
                    <br/>
                    <button type="submit">Create Book</button>
                </form>
            )}
        </div>
    );
};

export default BookAddForm;
